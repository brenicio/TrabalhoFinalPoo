/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import crtl.CaixaCRTL;
import crtl.ProdutoCRTL;
import crtl.ServicoCRTL;
import crtl.VendaCRTL;
import dao.ServicoDAO;
import dao.VendaDAO;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.math.BigDecimal;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.ListSelectionModel;
import model.TableMODEL;
import to.ClienteTO;
import to.FuncionarioTO;
import to.ItensVendaServicoTO;
import to.ProdutoTO;
import to.ServicoTO;

/**
 *
 * @author kamila
 */
public class VendasEfetuadasServico extends javax.swing.JInternalFrame {
//-----------------------------------------------------------//
    //TO'S
    FuncionarioTO funcTo = new FuncionarioTO();
    ClienteTO cliTo = new ClienteTO();
    ServicoTO servTo = new ServicoTO();
    ProdutoTO prodTo = new ProdutoTO();
    //TO'S
//-----------------------------------------------------------//
    //CRTL
    VendaCRTL crtl = new VendaCRTL();
    ProdutoCRTL prodcrtl = new ProdutoCRTL();
    CaixaCRTL caixacrtl = new CaixaCRTL();
    //CRTL'S
//-----------------------------------------------------------//
    //ARRAYLIST'S
    ArrayList<ItensVendaServicoTO> dadosback = new ArrayList();
    ArrayList itensServ = new ArrayList();
    ArrayList funcionarios = new ArrayList();
    ArrayList clientes = new ArrayList();
    ArrayList servicos = new ArrayList();
    ArrayList precoUnitario = new ArrayList();
    ArrayList precos = new ArrayList();
    ArrayList quant = new ArrayList();
    //ARRAYLIST'S
//-----------------------------------------------------------//
    //BIGDECIMAIS
    BigDecimal precoUnit;
    BigDecimal valorTotal = new BigDecimal(0.0);
    BigDecimal vendaTotal = new BigDecimal(0.0);
    BigDecimal desconto = new BigDecimal(0.0);
    //BIGDECIMAIS
//-----------------------------------------------------------//
    //INTEIROS
    int codUsuarioLogado;
    int quantidadeTotal;
    int codUsu;
    //INTEIROS
//-----------------------------------------------------------//
    //DAO
    VendaDAO vendaDao = new VendaDAO();
    //DAO
//-----------------------------------------------------------//


    /**
     * Creates new form VendasEfetuadass
     *
     * @param codUsuario
     */
    public VendasEfetuadasServico(int codUsuario) {
        initComponents();
        carregarComboFuncionarios();
        txtCliente.setEditable(false);
        codUsu = codUsuario;
        GanharFoco(cbFuncionario);
    }

    public VendasEfetuadasServico() {
        initComponents();
        crtl.somenteNumero(txtCliente, 100);
        carregarComboFuncionarios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnCancelar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        btnCliente = new javax.swing.JButton();
        txtVendaTotal = new javax.swing.JTextField();
        txtPrecoServico = new javax.swing.JTextField();
        txtCliente = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVenda = new javax.swing.JTable();
        btnRemover = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        txtServico = new javax.swing.JTextField();
        cbFuncionario = new javax.swing.JComboBox();
        btnAddLista = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnServico = new javax.swing.JButton();
        btnAddLista1 = new javax.swing.JButton();

        setClosable(true);
        setForeground(java.awt.Color.white);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Efetuar Venda");
        setPreferredSize(new java.awt.Dimension(800, 600));
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameActivated(evt);
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/excluir 24x24.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Total = ");

        jLabel2.setText("Preço do Serviço:");

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/recibo 24x24.png"))); // NOI18N
        jButton3.setText("Emitir Recibo");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/enter.png"))); // NOI18N
        btnCliente.setText("Selecionar");
        btnCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnCliente.setBorderPainted(false);
        btnCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClienteMouseClicked(evt);
            }
        });
        btnCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClienteActionPerformed(evt);
            }
        });

        txtVendaTotal.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtVendaTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVendaTotalActionPerformed(evt);
            }
        });

        txtPrecoServico.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtPrecoServico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPrecoServicoMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                txtPrecoServicoMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtPrecoServicoMouseExited(evt);
            }
        });
        txtPrecoServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecoServicoActionPerformed(evt);
            }
        });
        txtPrecoServico.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPrecoServicoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPrecoServicoFocusLost(evt);
            }
        });
        txtPrecoServico.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPrecoServicoKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPrecoServicoKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecoServicoKeyTyped(evt);
            }
        });

        txtCliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCliente.setText("Selecione um Cliente...");
        txtCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtClienteMouseClicked(evt);
            }
        });
        txtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteActionPerformed(evt);
            }
        });
        txtCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtClienteFocusGained(evt);
            }
        });
        txtCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtClienteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtClienteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClienteKeyTyped(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/ok 24x24.png"))); // NOI18N
        btnSalvar.setText("Salvar- F2");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jTableVenda.setAutoCreateRowSorter(true);
        jTableVenda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(204, 204, 204), null, null));
        jTableVenda.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jTableVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Descrição do Serviço/Produto", "Funcionario", "Cliente", "Preço"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.String.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableVenda.setToolTipText("");
        jTableVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVendaMouseClicked(evt);
            }
        });
        jTableVenda.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTableVendaComponentAdded(evt);
            }
        });
        jScrollPane1.setViewportView(jTableVenda);
        if (jTableVenda.getColumnModel().getColumnCount() > 0) {
            jTableVenda.getColumnModel().getColumn(0).setResizable(false);
            jTableVenda.getColumnModel().getColumn(1).setResizable(false);
            jTableVenda.getColumnModel().getColumn(2).setResizable(false);
            jTableVenda.getColumnModel().getColumn(3).setResizable(false);
        }

        btnRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/excluir 24x24.png"))); // NOI18N
        btnRemover.setText("Remover Serviço");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/sair.png"))); // NOI18N
        jButton13.setText("Fechar");
        jButton13.setMaximumSize(new java.awt.Dimension(139, 57));
        jButton13.setPreferredSize(new java.awt.Dimension(139, 57));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        txtServico.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtServico.setText("Selecione um Serviço...");

        cbFuncionario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cbFuncionarioMouseClicked(evt);
            }
        });
        cbFuncionario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbFuncionarioActionPerformed(evt);
            }
        });

        btnAddLista.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/prod 24x24.png"))); // NOI18N
        btnAddLista.setText("Adicionar Produtos a lista");
        btnAddLista.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnAddLista.setBorderPainted(false);
        btnAddLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddListaActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jLabel1.setText("Selecione um Funcionario:");

        btnServico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/enter.png"))); // NOI18N
        btnServico.setText("Selecionar");
        btnServico.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnServico.setBorderPainted(false);
        btnServico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnServicoActionPerformed(evt);
            }
        });

        btnAddLista1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/enter.png"))); // NOI18N
        btnAddLista1.setText("Adicionar na Lista");
        btnAddLista1.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnAddLista1.setBorderPainted(false);
        btnAddLista1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddLista1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnRemover)
                .addGap(45, 45, 45)
                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtVendaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnCancelar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtServico, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(btnCliente, javax.swing.GroupLayout.DEFAULT_SIZE, 95, Short.MAX_VALUE)
                                    .addComponent(btnServico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtPrecoServico, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(btnAddLista1, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(35, 35, 35)
                                .addComponent(btnAddLista, javax.swing.GroupLayout.PREFERRED_SIZE, 186, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 213, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1344, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 1, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(cbFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAddLista1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAddLista, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel2)
                                    .addComponent(btnCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtServico, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnServico, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtPrecoServico, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtVendaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1361, 613));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        Cancelar();

    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClienteActionPerformed
        try {
            ConsultarCliente consulCli = new ConsultarCliente(this, "venda");
            MenuPrincipal.getPainel().add(consulCli);
            consulCli.setVisible(true);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }


    }//GEN-LAST:event_btnClienteActionPerformed

    private void txtPrecoServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecoServicoActionPerformed
        if (!"".equals(txtPrecoServico.getText())) {
            String sv = txtPrecoServico.getText();
            String vsf = sv.replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
            BigDecimal valor = new BigDecimal(vsf);
            servTo.setPrecoServico(valor);
            NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
            String valorFormatado = nf.format(valor);
            txtPrecoServico.setText(valorFormatado);
        }
        btnAddLista.doClick();
    }//GEN-LAST:event_txtPrecoServicoActionPerformed

    private void txtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteActionPerformed

    }//GEN-LAST:event_txtClienteActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

    }//GEN-LAST:event_jButton3ActionPerformed

    private void txtClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClienteKeyPressed

    }//GEN-LAST:event_txtClienteKeyPressed

    private void txtPrecoServicoMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPrecoServicoMouseExited
        if (!"".equals(txtPrecoServico.getText())) {
            String sv = txtPrecoServico.getText();
            String vsf = sv.replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
            BigDecimal valor = new BigDecimal(vsf);
            servTo.setPrecoServico(valor);
            NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
            String valorFormatado = nf.format(valor);
            txtPrecoServico.setText(valorFormatado);
        }
    }//GEN-LAST:event_txtPrecoServicoMouseExited

    private void txtPrecoServicoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrecoServicoFocusLost
        if (!"".equals(txtPrecoServico.getText())) {
            String sv = txtPrecoServico.getText();
            String vsf = sv.replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
            BigDecimal valor = new BigDecimal(vsf);
            servTo.setPrecoServico(valor);
            NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
            String valorFormatado = nf.format(valor);
            txtPrecoServico.setText(valorFormatado);
        }
    }//GEN-LAST:event_txtPrecoServicoFocusLost

    private void jTableVendaComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTableVendaComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableVendaComponentAdded

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        RemoverProduto();
        CalcularTotal();
    }//GEN-LAST:event_btnRemoverActionPerformed

    private void txtClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtClienteMouseClicked

    }//GEN-LAST:event_txtClienteMouseClicked

    private void txtClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtClienteFocusGained

    }//GEN-LAST:event_txtClienteFocusGained

    private void txtClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClienteKeyTyped

    }//GEN-LAST:event_txtClienteKeyTyped

    private void txtClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClienteKeyReleased

    }//GEN-LAST:event_txtClienteKeyReleased

    private void txtVendaTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVendaTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVendaTotalActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        // INICIALIZAÇÃO DE VARIAVEIS
        FuncionarioTO funcionarioTo = new FuncionarioTO();
        ClienteTO clienteTo = new ClienteTO();
        ServicoTO servicoTo = new ServicoTO();
        ItensVendaServicoTO itens = new ItensVendaServicoTO();
        int i = 0;
        String descricaoven = "";
        ArrayList funcionariosA = new ArrayList();
        ArrayList servicosA = new ArrayList();
        ArrayList clientesA = new ArrayList();
        ArrayList precoUnitarioA = new ArrayList();

        //CONSISTENCIA PARA SABER SE EXISTE PRODUTOS NA TABELA PARA VENDER
        if (jTableVenda.getModel().getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Insira pelo menos um Serviço para prosseguir com a venda!");
        } else if (dadosback.isEmpty() == true) {
            JOptionPane.showMessageDialog(null, "Insira pelo menos um Serviço para prosseguir com a venda!");
        } else {
            while (i < jTableVenda.getModel().getRowCount()) {
                try {
                    //PEGANDO OS DADOS DA TABELA, QUANTIDADE E PREÇO
                    funcionarioTo = vendaDao.ConsultarNOMEFuncionario(jTableVenda.getModel().getValueAt(i, 3).toString());
                    itens.getFuncionarioTo().setNome(jTableVenda.getModel().getValueAt(i, 3).toString());
                    itens.getFuncionarioTo().setMatricula(funcionarioTo.getMatricula());
                    servicoTo = vendaDao.ConsultarNOMEServico(jTableVenda.getModel().getValueAt(i, 0).toString());
                    itens.getServicoTo().setCodServico(servicoTo.getCodServico());
                    itens.getServicoTo().setDescrServico(jTableVenda.getModel().getValueAt(i, 0).toString());
                    String sv = (jTableVenda.getModel().getValueAt(i, 1).toString()).replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
                    BigDecimal preco = new BigDecimal(sv);
                    servicoTo.setPrecoUnit(preco);
                    itens.getServicoTo().setPrecoServico(preco);
                    clienteTo = vendaDao.ConsultarNOMECliente(jTableVenda.getModel().getValueAt(i, 2).toString());
                    itens.getClienteTo().setCodCliente(clienteTo.getCodCliente());
                    itens.getClienteTo().setNome(jTableVenda.getModel().getValueAt(i, 2).toString());

                    funcionariosA.add(funcionarioTo.getMatricula());
                    servicosA.add(servicoTo.getCodServico());
                    clientesA.add(clienteTo.getCodCliente());
                    precoUnitarioA.add(servicoTo.getPrecoUnit());

                    descricaoven += "|" + (jTableVenda.getModel().getValueAt(i, 0).toString());
                    i++;
                } catch (Exception ex) {
                    JOptionPane.showMessageDialog(null, ex.getMessage());
                }
            }
            FormasDePagamento1 f2 = new FormasDePagamento1(servicosA, funcionariosA, clientesA, vendaTotal, descricaoven, this, codUsu, precoUnitarioA);
            MenuPrincipal.getPainel().add(f2);
            f2.setVisible(true);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jTableVendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVendaMouseClicked

    }//GEN-LAST:event_jTableVendaMouseClicked

    private void txtPrecoServicoMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPrecoServicoMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecoServicoMouseEntered

    private void txtPrecoServicoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPrecoServicoMouseClicked
        if (!"".equals(txtPrecoServico.getText())) {
            String sv = txtPrecoServico.getText();
            String vsf = sv.replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
            BigDecimal valor = new BigDecimal(vsf);
            servTo.setPrecoServico(valor);
            NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
            String valorFormatado = nf.format(valor);
            txtPrecoServico.setText(valorFormatado);
        }
    }//GEN-LAST:event_txtPrecoServicoMouseClicked

    private void txtPrecoServicoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrecoServicoFocusGained
        if (!"".equals(txtPrecoServico.getText())) {
            String sv = txtPrecoServico.getText();
            String vsf = sv.replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
            BigDecimal valor = new BigDecimal(vsf);
            servTo.setPrecoServico(valor);
            NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
            String valorFormatado = nf.format(valor);
            txtPrecoServico.setText(valorFormatado);
        }
    }//GEN-LAST:event_txtPrecoServicoFocusGained

    private void btnAddListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddListaActionPerformed

    }//GEN-LAST:event_btnAddListaActionPerformed

    private void btnServicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnServicoActionPerformed
        ConsultarServico consulServ = new ConsultarServico(this, "venda");
        MenuPrincipal.getPainel().add(consulServ);
        consulServ.setVisible(true);
    }//GEN-LAST:event_btnServicoActionPerformed

    private void cbFuncionarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbFuncionarioActionPerformed

    }//GEN-LAST:event_cbFuncionarioActionPerformed

    private void cbFuncionarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbFuncionarioMouseClicked

    }//GEN-LAST:event_cbFuncionarioMouseClicked

    private void formInternalFrameActivated(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameActivated

    }//GEN-LAST:event_formInternalFrameActivated

    private void btnClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClienteMouseClicked
        if (btnCliente.isEnabled() == false) {
            JOptionPane.showMessageDialog(null, "Cancele a venda atual ou remova os Serviços da tabela!");
        }
    }//GEN-LAST:event_btnClienteMouseClicked

    private void txtPrecoServicoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecoServicoKeyPressed

    }//GEN-LAST:event_txtPrecoServicoKeyPressed

    private void txtPrecoServicoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecoServicoKeyReleased

    }//GEN-LAST:event_txtPrecoServicoKeyReleased

    private void txtPrecoServicoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecoServicoKeyTyped

    }//GEN-LAST:event_txtPrecoServicoKeyTyped

    private void btnAddLista1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddLista1ActionPerformed
        AdicionarServico();
    }//GEN-LAST:event_btnAddLista1ActionPerformed

    private void AdicionarServico() {
        if (txtCliente.getText().equals("") || txtCliente.getText().equals("Selecione um Cliente...")) {
            JOptionPane.showMessageDialog(null, "Selecione um Cliente!");
            txtCliente.setText("");
            GanharFoco(txtCliente);
        } else if (txtServico.getText().equals("") || txtServico.getText().equals("Selecione um Serviço...")) {
            JOptionPane.showMessageDialog(null, "Selecione um Serviço!");
            txtServico.setText("");
            GanharFoco(txtServico);
        } else if (cbFuncionario.getSelectedItem() == null) {
            JOptionPane.showMessageDialog(null, "Selecione um Funcionario!");
            GanharFoco(cbFuncionario);
        } else if (txtPrecoServico.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Insira o preço do serviço!");
            GanharFoco(txtPrecoServico);
        } else {
            try {
                preencherTabela3();
                btnCliente.setEnabled(false);
                txtPrecoServico.setText("");
                txtServico.setText("");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
            CalcularTotal();
        }
    }

    public void preencherTabela3() throws Exception {
        ArrayList<ItensVendaServicoTO> dados = new ArrayList();
        funcTo.setNome(cbFuncionario.getSelectedItem().toString());
        ArrayList dados1 = new ArrayList();
        ItensVendaServicoTO itensVenda = new ItensVendaServicoTO();
        itensVenda.getFuncionarioTo().setNome(cbFuncionario.getSelectedItem().toString());
        itensVenda.getServicoTo().setDescrServico(servTo.getDescrServico());
        itensVenda.getServicoTo().setPrecoServico(servTo.getPrecoServico());
        itensVenda.getClienteTo().setNome(cliTo.getNome());
        dados = itensVenda.retornarArray(itensVenda);

        int e = 0;
        e = dados.size();
        dadosback.addAll(dados);

        int i = 0;

        while (i < dadosback.size()) {
            String preco = "";

            NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));

            preco = nf.format(dadosback.get(i).getServicoTo().getPrecoServico());

            dados1.add(new Object[]{dadosback.get(i).getServicoTo().getDescrServico(),
                preco, dadosback.get(i).getClienteTo().getNome(), dadosback.get(i).getFuncionarioTo().getNome()});

            i++;
        }

        String[] Colunas = new String[]{"Descrição do Serviço", "Preço", "Cliente", "Funcionario"};

        TableMODEL modelo = new TableMODEL(dados1, Colunas);
        jTableVenda.setModel(modelo);

        jTableVenda.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        jTableVenda.getColumnModel()
                .getColumn(0).setPreferredWidth(450);
        jTableVenda.getColumnModel()
                .getColumn(0).setMaxWidth(450);
        jTableVenda.getColumnModel()
                .getColumn(0).setMinWidth(450);
        jTableVenda.getTableHeader()
                .setReorderingAllowed(false);
        jTableVenda.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);

        jTableVenda.getColumnModel()
                .getColumn(1).setPreferredWidth(188);
        jTableVenda.getColumnModel()
                .getColumn(1).setMaxWidth(188);
        jTableVenda.getColumnModel()
                .getColumn(1).setMinWidth(188);
        jTableVenda.getColumnModel()
                .getColumn(2).setPreferredWidth(400);
        jTableVenda.getColumnModel()
                .getColumn(2).setMaxWidth(400);
        jTableVenda.getColumnModel()
                .getColumn(2).setMinWidth(400);
        jTableVenda.getColumnModel()
                .getColumn(3).setPreferredWidth(300);
        jTableVenda.getColumnModel()
                .getColumn(3).setMaxWidth(300);
        jTableVenda.getColumnModel()
                .getColumn(3).setMinWidth(300);

        jTableVenda.setComponentPopupMenu(PopUPMenu());
        jTableVenda.validate();

        repaint();

    }
//    

    public void RemoverProduto() {
        itensServ = new ArrayList();
        quant = new ArrayList();
        int linha = jTableVenda.getSelectedRow();

        if (linha == -1) {
            JOptionPane.showMessageDialog(null, "Selecione primeiro a linha a ser removida!");
        } else {

            TableMODEL modelo = (TableMODEL) jTableVenda.getModel();
            modelo.setremove(linha);
            int i = 0;
            ArrayList<ItensVendaServicoTO> dadosnew = new ArrayList();
            ItensVendaServicoTO itens = new ItensVendaServicoTO();
            while (i < jTableVenda.getModel().getRowCount()) {
                itens.getServicoTo().setDescrServico(jTableVenda.getModel().getValueAt(i, 0).toString());
                String sv = (jTableVenda.getModel().getValueAt(i, 1).toString()).replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
                BigDecimal preco = new BigDecimal(sv);
                itens.getServicoTo().setPrecoServico(preco);
                itens.getClienteTo().setNome(jTableVenda.getModel().getValueAt(i, 2).toString());
                itens.getFuncionarioTo().setNome(jTableVenda.getModel().getValueAt(i, 3).toString());
                dadosnew.add(itens);
                i++;
            }
            int rowCount = jTableVenda.getModel().getRowCount();
            if (rowCount == 0) {
                btnCliente.setEnabled(true);
            }
            dadosback = dadosnew;
            jTableVenda.setModel(modelo);
            txtPrecoServico.validate();

        }
    }

    private void CalcularTotal() {
        int i = 0;

        BigDecimal total = new BigDecimal(0.0);
        while (i < jTableVenda.getModel().getRowCount()) {
            String sv = (jTableVenda.getModel().getValueAt(i, 1).toString()).replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
            BigDecimal valTotal = new BigDecimal(sv);
            total = total.add(valTotal);
            i++;

        }
        vendaTotal = total;
        NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
        String valorFormatado = nf.format(total);
        txtVendaTotal.setText(valorFormatado);

    }

    public void Desconto() {

        BigDecimal valortotal;
        valortotal = vendaTotal.subtract(desconto);
        NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
        String valorFormatado = nf.format(valortotal);

        txtVendaTotal.setText(valorFormatado);
        txtVendaTotal.revalidate();
        txtVendaTotal.repaint();

        JOptionPane.showMessageDialog(null, txtVendaTotal.getText());

    }

    public void alterarTotal(String valor) {
        txtVendaTotal.setText(valor);
    }

    public void Cancelar() {
        int linha = jTableVenda.getSelectedRow();
        quant = new ArrayList();

        TableMODEL modelo = (TableMODEL) jTableVenda.getModel();
        modelo.limpaTabela();
        int i = 0;
        ArrayList<ItensVendaServicoTO> dadosnew = new ArrayList();
        ItensVendaServicoTO itens = new ItensVendaServicoTO();
        while (i < jTableVenda.getModel().getRowCount()) {
            itens.getServicoTo().setDescrServico(jTableVenda.getModel().getValueAt(i, 0).toString());
            String sv = (jTableVenda.getModel().getValueAt(i, 1).toString()).replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
            BigDecimal preco = new BigDecimal(sv);
            itens.getServicoTo().setPrecoServico(preco);
            itens.getClienteTo().setNome(jTableVenda.getModel().getValueAt(i, 2).toString());
            itens.getFuncionarioTo().setNome(jTableVenda.getModel().getValueAt(i, 3).toString());
            dadosnew.add(itens);
            i++;
        }
        int rowCount = jTableVenda.getModel().getRowCount();
        if (rowCount == 0) {
            btnCliente.setEnabled(true);
        }
        dadosback = dadosnew;
        jTableVenda.setModel(modelo);
        jTableVenda.validate();
        jTableVenda.repaint();
        jTableVenda.revalidate();
        txtCliente.setText("");
        txtServico.setText("");
        txtPrecoServico.setText("");

        CalcularTotal();
    }

    public void RecebendoDadosFuncionario(FuncionarioTO to) {
        funcTo = to;
        txtServico.setText(to.getNome());

    }

    public void RecebendoDadosServico(ServicoTO to) {
        servTo = new ServicoTO();
        servTo = to;
        txtServico.setText(to.getDescrServico());
    }

    public void RecebendoDadosCliente(ClienteTO to) {
        cliTo = new ClienteTO();
        cliTo = to;
        txtCliente.setText(to.getNome());
    }

    private void carregarComboFuncionarios() {
        VendaDAO dao = new VendaDAO();
        try {
            ArrayList<String> marcTo;
            marcTo = dao.consultarMarca();
            cbFuncionario.setModel(new DefaultComboBoxModel(marcTo.toArray()));
            cbFuncionario.setSelectedItem(null);
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

    }

    private void GanharFoco(final JComboBox jb) {
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                jb.requestFocusInWindow();
            }
        });
    }

    public void GanharFoco(final JTextField txt) {
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            @Override
            public void run() {
                txt.requestFocusInWindow();
            }
        });
    }

    public JPopupMenu PopUPMenu() {
        final JPopupMenu popMenu = new JPopupMenu();
        JMenuItem removerServico = new JMenuItem("Remover Serviço");
        JMenuItem removerTudo = new JMenuItem("Remover Tudo");
        removerServico.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                RemoverProduto();
            }
        });

        removerTudo.addActionListener(new ActionListener() {

            @Override
            public void actionPerformed(ActionEvent e) {
                Cancelar();
            }

        });
        popMenu.add(removerServico);
        popMenu.add(removerTudo);
        return popMenu;

    }

    public void zerar() {
        ClienteTO cliTo2 = new ClienteTO();
        ServicoTO servTo2 = new ServicoTO();
        cliTo = cliTo2;
        servTo = servTo2;
    }
    
    
    public BigDecimal getDesconto() {
        return desconto;
    }

    public void setDesconto(BigDecimal desconto) {
        this.desconto = desconto;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddLista;
    private javax.swing.JButton btnAddLista1;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCliente;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnServico;
    private javax.swing.JComboBox cbFuncionario;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTableVenda;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtPrecoServico;
    private javax.swing.JTextField txtServico;
    private javax.swing.JTextField txtVendaTotal;
    // End of variables declaration//GEN-END:variables

}
