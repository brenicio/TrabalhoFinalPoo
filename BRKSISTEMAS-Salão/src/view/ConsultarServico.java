/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import crtl.ServicoCRTL;
import java.util.ArrayList;
import javax.swing.JFormattedTextField;
import javax.swing.JTextField;
import model.TableMODEL;
import to.ServicoTO;

/**
 *
 * @author kamila
 */
public class ConsultarServico extends javax.swing.JInternalFrame {

    ServicoCRTL crtl = new ServicoCRTL();
    ManterServico enviaDados = new ManterServico();
    public static VendasEfetuadasServico venda;
    String telaSelecionada = "";

    /**
     * Creates new form ConsultarServico
     */
    public ConsultarServico() {
        initComponents();
        preencherTabela();
        MenuPrincipal.getPainel().add(enviaDados);
        enviaDados.setVisible(true);
        GanharFoco(txtPesquisa);
    }

    public ConsultarServico(VendasEfetuadasServico parent, String tela) {
        this.venda = parent;
        telaSelecionada = tela;
        initComponents();
        preencherTabela();
        GanharFoco(txtPesquisa);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbOpcao = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableServico = new javax.swing.JTable();
        btnSelecionar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        txtPesquisa = new javax.swing.JFormattedTextField();

        setTitle("Consultar Serviço");

        cbOpcao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Descrição do Serviço", "Codigo" }));
        cbOpcao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbOpcaoActionPerformed(evt);
            }
        });

        jTableServico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTableServico);

        btnSelecionar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/1433364306_f-check_256.png"))); // NOI18N
        btnSelecionar.setText("Selecionar");
        btnSelecionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/out 24x24.png"))); // NOI18N
        btnCancelar.setText("Fechar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        txtPesquisa.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtPesquisaMouseClicked(evt);
            }
        });
        txtPesquisa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtPesquisaFocusGained(evt);
            }
        });
        txtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnSelecionar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbOpcao, 0, 145, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, 374, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbOpcao, javax.swing.GroupLayout.DEFAULT_SIZE, 25, Short.MAX_VALUE)
                    .addComponent(txtPesquisa))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 259, Short.MAX_VALUE)
                .addContainerGap())
        );

        setBounds(450, 130, 573, 380);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSelecionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarActionPerformed

        int linha = jTableServico.getSelectedRow();
        crtl.getServicoTo().setCodServico(Integer.parseInt(jTableServico.getValueAt(linha, 0).toString()));
        crtl.getServicoTo().setDescrServico(jTableServico.getModel().getValueAt(linha, 1).toString());
        if (telaSelecionada.equals("venda")) {
            venda.RecebendoDadosServico(crtl.getServicoTo());
            this.dispose();
            venda.setVisible(true);
        } else {
            enviaDados.recebendo(crtl.getServicoTo());
            this.dispose();
            enviaDados.setVisible(true);
        }

    }//GEN-LAST:event_btnSelecionarActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtPesquisaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPesquisaMouseClicked
        if (txtPesquisa.getText().equals("")) {
            if (cbOpcao.getSelectedIndex() == 0) {
                Maiuscula(txtPesquisa);
            } else {
                somenteNumero();
            }
        }
    }//GEN-LAST:event_txtPesquisaMouseClicked

    private void txtPesquisaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyPressed

    }//GEN-LAST:event_txtPesquisaKeyPressed

    private void txtPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyReleased
        if (cbOpcao.getSelectedIndex() == 0) {
            preencherTabela2();
        } else if (cbOpcao.getSelectedIndex() == 1 && !"".equals(txtPesquisa.getText())) {
            preencherTabela3();
        }

        if (txtPesquisa.getText().equalsIgnoreCase("")) {
            preencherTabela();
        }

    }//GEN-LAST:event_txtPesquisaKeyReleased

    private void txtPesquisaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyTyped
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPesquisaKeyTyped

    private void cbOpcaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbOpcaoActionPerformed
        LimparCampos();
    }//GEN-LAST:event_cbOpcaoActionPerformed

    private void txtPesquisaFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPesquisaFocusGained
        if (txtPesquisa.getText().equals("")) {
            if (cbOpcao.getSelectedIndex() == 0) {
                Maiuscula(txtPesquisa);
            } else {
                somenteNumero();
            }
        }
    }//GEN-LAST:event_txtPesquisaFocusGained
    public void Maiuscula(JFormattedTextField txt) {
        crtl.maiuscula(txt);
    }

    public void LimparCampos() {
        txtPesquisa.setText("");
    }

    public void GanharFoco(final JTextField txt) {
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                txt.requestFocusInWindow();
            }
        });
    }

    public void somenteNumero() {
        crtl.somenteNumero(txtPesquisa, 4);
    }

    public void preencherTabela() {
        ServicoCRTL serv = new ServicoCRTL();
        ArrayList<ServicoTO> dados = new ArrayList();
        ArrayList dados1 = new ArrayList();
        dados = serv.consultarTodos();
        int i = 0;
        while (i < dados.size()) {
            dados1.add(new Object[]{dados.get(i).getCodServico(), dados.get(i).getDescrServico()});
            i++;
        }

        String[] Colunas = new String[]{"Codigo", "Descrição do Serviço"};

        TableMODEL modelo = new TableMODEL(dados1, Colunas);
        jTableServico.setModel(modelo);

        jTableServico.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTableServico.getColumnModel().getColumn(0).setMaxWidth(80);
        jTableServico.getColumnModel().getColumn(0).setMinWidth(80);
        jTableServico.getColumnModel().getColumn(1).setPreferredWidth(463);
        jTableServico.getColumnModel().getColumn(1).setMaxWidth(463);

        jTableServico.getColumnModel().getColumn(1).setMinWidth(463);

        jTableServico.setAutoResizeMode(jTableServico.AUTO_RESIZE_OFF);
        // jTableServico.getColumnModel().getColumn(0).setPreferredWidth(0);
        // jTableServico.getColumnModel().getColumn(0).setMinWidth(0);
        // jTableServico.getColumnModel().getColumn(0).setMaxWidth(0);
        //  jTableServico.getColumnModel().getColumn(1).setPreferredWidth(0);
        //jTableServico.getColumnModel().getColumn(1).setMinWidth(0);

        //jTableProdutos.getRowSorter().toggleSortOrder(0);
        jTableServico.getTableHeader().setReorderingAllowed(false);

    }

    public void preencherTabela2() {
        ServicoCRTL servCrtl = new ServicoCRTL();
        ArrayList<ServicoTO> dados = new ArrayList();
        ArrayList dados1 = new ArrayList();

        dados = servCrtl.consultarTodosC(txtPesquisa.getText());

        int i = 0;
        while (i < dados.size()) {
            dados1.add(new Object[]{dados.get(i).getCodServico(), dados.get(i).getDescrServico()});
            i++;
        }
        String[] Colunas = new String[]{"Codigo", "Descrição do Serviço"};

        TableMODEL modelo = new TableMODEL(dados1, Colunas);
        jTableServico.setModel(modelo);

        jTableServico.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTableServico.getColumnModel().getColumn(0).setMaxWidth(80);
        jTableServico.getColumnModel().getColumn(0).setMinWidth(80);
        jTableServico.getColumnModel().getColumn(1).setPreferredWidth(463);
        jTableServico.getColumnModel().getColumn(1).setMaxWidth(463);
        jTableServico.getColumnModel().getColumn(1).setMinWidth(463);
        jTableServico.setAutoResizeMode(jTableServico.AUTO_RESIZE_OFF);
        jTableServico.getTableHeader().setReorderingAllowed(false);
    }

    public void preencherTabela3() {
        ServicoTO servTo = new ServicoTO();
        ServicoCRTL servCrtl = new ServicoCRTL();
        ArrayList dados1 = new ArrayList();

        servTo = servCrtl.consultarID(Integer.parseInt(txtPesquisa.getText()));

        dados1.add(new Object[]{servTo.getCodServico(), servTo.getDescrServico()});

        String[] Colunas = new String[]{"Codigo", "Descrição do Serviço"};

        TableMODEL modelo = new TableMODEL(dados1, Colunas);
        jTableServico.setModel(modelo);

        jTableServico.getColumnModel().getColumn(0).setPreferredWidth(80);
        jTableServico.getColumnModel().getColumn(0).setMaxWidth(80);
        jTableServico.getColumnModel().getColumn(0).setMinWidth(80);
        jTableServico.getColumnModel().getColumn(1).setPreferredWidth(463);
        jTableServico.getColumnModel().getColumn(1).setMaxWidth(463);
        jTableServico.getColumnModel().getColumn(1).setMinWidth(463);
        jTableServico.setAutoResizeMode(jTableServico.AUTO_RESIZE_OFF);
        jTableServico.getTableHeader().setReorderingAllowed(false);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnSelecionar;
    private javax.swing.JComboBox cbOpcao;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTableServico;
    private javax.swing.JFormattedTextField txtPesquisa;
    // End of variables declaration//GEN-END:variables
}
