/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import crtl.CaixaCRTL;
import crtl.ProdutoCRTL;
import crtl.VendaCRTL;
import dao.ProdutoDAO;
import dao.VendaDAO;
import java.math.BigDecimal;
import java.text.NumberFormat;
import java.util.ArrayList;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFormattedTextField;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import model.TableMODEL;
import to.ClienteTO;
import to.ProdutoTO;

/**
 *
 * @author kamila
 */
public class VendasEfetuadass extends javax.swing.JInternalFrame {

    private Object escritorio1;
    VendaCRTL crtl = new VendaCRTL();
    ProdutoCRTL prodcrtl = new ProdutoCRTL();
    CaixaCRTL caixacrtl = new CaixaCRTL();
    ArrayList<ProdutoTO> dadosback = new ArrayList();
    ProdutoTO produtoTo = new ProdutoTO();
    ArrayList prod = new ArrayList();
    ArrayList quant = new ArrayList();
    //BigDecimais
    BigDecimal precoUnit;
    BigDecimal valorTotal = new BigDecimal(0.0);
    BigDecimal vendaTotal = new BigDecimal(0.0);
    int quantidadeTotal;
    BigDecimal desconto = new BigDecimal(0.0);
    int incremento = 0;
    ClienteTO cliTo = new ClienteTO();

    //Variaveis da tela de serviço
    ArrayList clientes = new ArrayList();
    ArrayList servicos = new ArrayList();
    ArrayList precoUnitarioServ = new ArrayList();
    BigDecimal vendaTotalServico = new BigDecimal(0.0);
    int codUsu;
    String descricaovenServ;
    ArrayList funcionarios = new ArrayList();
    VendasEfetuadasServico telaserv = new VendasEfetuadasServico();

    //Fim - Variaveis da tela de serviço
    public BigDecimal getDesconto() {
        return desconto;
    }

    public void setDesconto(BigDecimal desconto) {
        this.desconto = desconto;
    }

    /**
     * Creates new form VendasEfetuadass
     */
    public VendasEfetuadass() {
        initComponents();
        txtTotal.setEditable(false);
        txtPrecoUnit.setEditable(false);
        txtQtdeDisponivel.setEditable(false);
        crtl.somenteNumero(txtQtde, 5);
        crtl.somenteNumero2(txtPrecoUnit, 10);
        crtl.somenteNumero2(txtTotal, 20);
        crtl.somenteNumero(txtCodigoBarras, 60);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtQtde = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtTotal = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        txtVendaTotal = new javax.swing.JTextField();
        txtPrecoUnit = new javax.swing.JTextField();
        txtCodigoBarras = new javax.swing.JTextField();
        btnSalvar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableVenda = new javax.swing.JTable();
        btnRemover = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        txtQtdeDisponivel = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        btnCliente = new javax.swing.JButton();
        txtCliente = new javax.swing.JTextField();

        setClosable(true);
        setForeground(java.awt.Color.white);
        setTitle("Efetuar Venda");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(759, 600));

        jLabel1.setText("Quantidade");

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/excluir 24x24.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/prod 24x24.png"))); // NOI18N

        txtQtde.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtQtde.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtdeActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel4.setText("Total = ");

        txtTotal.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTotalActionPerformed(evt);
            }
        });

        jLabel2.setText("Preço Unitario");

        jLabel3.setText("Total");

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/enter.png"))); // NOI18N
        jButton4.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        jButton4.setBorderPainted(false);
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        txtVendaTotal.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        txtVendaTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtVendaTotalActionPerformed(evt);
            }
        });

        txtPrecoUnit.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtPrecoUnit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseExited(java.awt.event.MouseEvent evt) {
                txtPrecoUnitMouseExited(evt);
            }
        });
        txtPrecoUnit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPrecoUnitActionPerformed(evt);
            }
        });
        txtPrecoUnit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPrecoUnitFocusLost(evt);
            }
        });

        txtCodigoBarras.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        txtCodigoBarras.setText("Selecione um produto...");
        txtCodigoBarras.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtCodigoBarrasMouseClicked(evt);
            }
        });
        txtCodigoBarras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCodigoBarrasActionPerformed(evt);
            }
        });
        txtCodigoBarras.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtCodigoBarrasFocusGained(evt);
            }
        });
        txtCodigoBarras.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCodigoBarrasKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtCodigoBarrasKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoBarrasKeyTyped(evt);
            }
        });

        btnSalvar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/ok 24x24.png"))); // NOI18N
        btnSalvar.setText("Salvar- F2");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jTableVenda.setAutoCreateRowSorter(true);
        jTableVenda.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED, null, new java.awt.Color(204, 204, 204), null, null));
        jTableVenda.setFont(new java.awt.Font("Arial", 1, 16)); // NOI18N
        jTableVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo de Barras", "Descrição do Produto", "Marca", "Categoria", "Preço Unitario", "Quantidade Total", "Valor Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTableVenda.setToolTipText("");
        jTableVenda.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableVendaMouseClicked(evt);
            }
        });
        jTableVenda.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                jTableVendaComponentAdded(evt);
            }
        });
        jScrollPane1.setViewportView(jTableVenda);
        if (jTableVenda.getColumnModel().getColumnCount() > 0) {
            jTableVenda.getColumnModel().getColumn(0).setResizable(false);
            jTableVenda.getColumnModel().getColumn(1).setResizable(false);
            jTableVenda.getColumnModel().getColumn(2).setResizable(false);
            jTableVenda.getColumnModel().getColumn(3).setResizable(false);
            jTableVenda.getColumnModel().getColumn(4).setResizable(false);
            jTableVenda.getColumnModel().getColumn(5).setResizable(false);
            jTableVenda.getColumnModel().getColumn(6).setResizable(false);
        }

        btnRemover.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/excluir 24x24.png"))); // NOI18N
        btnRemover.setText("Remover Produto");
        btnRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoverActionPerformed(evt);
            }
        });

        jButton13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/sair.png"))); // NOI18N
        jButton13.setText("Fechar");
        jButton13.setMaximumSize(new java.awt.Dimension(139, 57));
        jButton13.setPreferredSize(new java.awt.Dimension(139, 57));
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        txtQtdeDisponivel.setFont(new java.awt.Font("Arial", 1, 14)); // NOI18N
        txtQtdeDisponivel.setForeground(new java.awt.Color(255, 0, 0));
        txtQtdeDisponivel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQtdeDisponivelActionPerformed(evt);
            }
        });

        jLabel5.setText("Qtde. Disponivel");

        btnCliente.setIcon(new javax.swing.ImageIcon(getClass().getResource("/view/imagens/enter.png"))); // NOI18N
        btnCliente.setText("Selecionar");
        btnCliente.setBorder(javax.swing.BorderFactory.createEmptyBorder(1, 1, 1, 1));
        btnCliente.setBorderPainted(false);
        btnCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnClienteMouseClicked(evt);
            }
        });
        btnCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClienteActionPerformed(evt);
            }
        });

        txtCliente.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        txtCliente.setText("Selecione um Cliente...");
        txtCliente.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtClienteMouseClicked(evt);
            }
        });
        txtCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtClienteActionPerformed(evt);
            }
        });
        txtCliente.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtClienteFocusGained(evt);
            }
        });
        txtCliente.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtClienteKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtClienteKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtClienteKeyTyped(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtQtde, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCodigoBarras, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtQtdeDisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecoUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(0, 163, Short.MAX_VALUE))
                            .addComponent(txtTotal)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRemover)
                        .addGap(29, 29, 29)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVendaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSalvar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 585, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(txtCliente, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtCodigoBarras, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQtde, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(34, 34, 34))
                            .addComponent(txtPrecoUnit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtQtdeDisponivel, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnRemover, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtVendaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        setSize(new java.awt.Dimension(1370, 604));
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        try {
            Cancelar();
        } catch (Exception ex) {
            Logger.getLogger(VendasEfetuadass.class.getName()).log(Level.SEVERE, null, ex);
        }
        GanharFoco(txtQtde);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void txtQtdeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtdeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtdeActionPerformed

    private void txtTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTotalActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        ConsultarProduto consulProd = new ConsultarProduto("VendaProd", this);
        MenuPrincipal.getPainel().add(consulProd);
        consulProd.setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void txtPrecoUnitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPrecoUnitActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPrecoUnitActionPerformed

    private void txtCodigoBarrasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCodigoBarrasActionPerformed
        // PesquisarProduto();
    }//GEN-LAST:event_txtCodigoBarrasActionPerformed

    private void txtCodigoBarrasKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBarrasKeyPressed

    }//GEN-LAST:event_txtCodigoBarrasKeyPressed

    private void txtPrecoUnitMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtPrecoUnitMouseExited
//        if (!"".equals(txtPrecoUnit.getText())) {
//            String sv = txtPrecoUnit.getText();
//            String vsf = sv.replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
//            BigDecimal valor = new BigDecimal(vsf);
//            precoUnit = valor;
//            NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
//            String valorFormatado = nf.format(valor);
//            txtPrecoUnit.setText(valorFormatado);
//
//            valorTotal = precoUnit.multiply(BigDecimal.valueOf(Long.parseLong(txtQtde.getText())));
//            nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
//            valorFormatado = nf.format(valorTotal);
//            txtTotal.setText(valorFormatado);
//        } else {
//            txtTotal.setText("");
//
//        }
    }//GEN-LAST:event_txtPrecoUnitMouseExited

    private void txtPrecoUnitFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPrecoUnitFocusLost
//        if (!"".equals(txtPrecoUnit.getText())) {
//            String sv = txtPrecoUnit.getText();
//            String vsf = sv.replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
//            BigDecimal valor = new BigDecimal(vsf);
//            precoUnit = valor;
//            NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
//            String valorFormatado = nf.format(valor);
//            txtPrecoUnit.setText(valorFormatado);
//
//            valorTotal = precoUnit.multiply(BigDecimal.valueOf(Long.parseLong(txtQtde.getText())));
//            nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
//            valorFormatado = nf.format(valorTotal);
//            txtTotal.setText(valorFormatado);
//        } else {
//            txtTotal.setText("");
//
//        }
//
    }//GEN-LAST:event_txtPrecoUnitFocusLost

    private void jTableVendaComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_jTableVendaComponentAdded
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableVendaComponentAdded

    private void btnRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoverActionPerformed
        RemoverProduto();

    }//GEN-LAST:event_btnRemoverActionPerformed

    private void txtCodigoBarrasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtCodigoBarrasMouseClicked

    }//GEN-LAST:event_txtCodigoBarrasMouseClicked

    private void txtCodigoBarrasFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCodigoBarrasFocusGained
        // crtl.somenteNumero(txtCodigoBarras, 100);
    }//GEN-LAST:event_txtCodigoBarrasFocusGained

    private void txtCodigoBarrasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBarrasKeyTyped

    }//GEN-LAST:event_txtCodigoBarrasKeyTyped

    private void txtCodigoBarrasKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoBarrasKeyReleased

    }//GEN-LAST:event_txtCodigoBarrasKeyReleased

    private void txtVendaTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtVendaTotalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtVendaTotalActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if (jTableVenda.getModel().getRowCount() == 0) {
            JOptionPane.showMessageDialog(null, "Insira pelo menos um produto para prosseguir com a venda!");
        } else if (dadosback.isEmpty() == true) {
            JOptionPane.showMessageDialog(null, "Insira pelo menos um produto para prosseguir com a venda!");
        } else {
            quant = new ArrayList();
            prod = new ArrayList();
            int i = 0;
            ProdutoTO prodTo = new ProdutoTO();

            String descricaoven = "";
            //JOptionPane.showMessageDialog(null, jTableVenda.getModel().getRowCount());
            while (i < jTableVenda.getModel().getRowCount()) {
                prodTo.setCodBarra(Integer.parseInt(jTableVenda.getModel().getValueAt(i, 0).toString()));

                prodTo.setDescrProd(jTableVenda.getModel().getValueAt(i, 1).toString());
                prodTo.setNomeMarca(jTableVenda.getModel().getValueAt(i, 2).toString());
                prodTo.setCategoria(jTableVenda.getModel().getValueAt(i, 3).toString());
                String sv = (jTableVenda.getModel().getValueAt(i, 4).toString()).replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
                BigDecimal valVenda = new BigDecimal(sv);
                prodTo.setValorVenda(valVenda.doubleValue());
                prodTo.setQuantidadetotal(Integer.parseInt(jTableVenda.getModel().getValueAt(i, 5).toString()));
                sv = (jTableVenda.getModel().getValueAt(i, 6).toString()).replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
                BigDecimal valTotal = new BigDecimal(sv);
                prodTo.setValortotal(valTotal);
                prod.add(prodTo.getCodBarra());
                quant.add(prodTo.getQuantidadetotal());
                descricaoven += "," + (jTableVenda.getModel().getValueAt(i, 1).toString());
                i++;
            }

            // itens da venda -------------------------------        
//        JOptionPane.showMessageDialog(null, prod.get(0));
//        JOptionPane.showMessageDialog(null, prod.get(1));
            FormasDePagamento2 f2 = new FormasDePagamento2(prod, quant, vendaTotal, descricaoven, this, cliTo.getCodCliente());
            MenuPrincipal.getPainel().add(f2);
            f2.setVisible(true);
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jTableVendaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableVendaMouseClicked
        int i = jTableVenda.getSelectedRow();
        txtPrecoUnit.setText(jTableVenda.getModel().getValueAt(i, 4).toString());
        txtTotal.setText(jTableVenda.getModel().getValueAt(i, 6).toString());
        ProdutoTO to = new ProdutoTO();
        VendaDAO dao = new VendaDAO();
        try {
            to = dao.ConsultarItemID(Integer.parseInt(jTableVenda.getModel().getValueAt(i, 0).toString()));
        } catch (Exception ex) {
            Logger.getLogger(VendasEfetuadass.class.getName()).log(Level.SEVERE, null, ex);
        }
        txtQtdeDisponivel.setText(String.valueOf(to.getQtdeProd()));
    }//GEN-LAST:event_jTableVendaMouseClicked

    private void txtQtdeDisponivelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQtdeDisponivelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQtdeDisponivelActionPerformed

    private void btnClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnClienteMouseClicked
        if (btnCliente.isEnabled() == false) {
            JOptionPane.showMessageDialog(null, "Cancele a venda atual ou remova os Serviços da tabela!");
        }
    }//GEN-LAST:event_btnClienteMouseClicked

    private void btnClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClienteActionPerformed

        ConsultarCliente consulCli = null;
        try {
            consulCli = new ConsultarCliente(this, "vendaProd");
        } catch (Exception ex) {
            Logger.getLogger(VendasEfetuadasServico.class.getName()).log(Level.SEVERE, null, ex);
        }
        MenuPrincipal.getPainel().add(consulCli);
        consulCli.setVisible(true);
    }//GEN-LAST:event_btnClienteActionPerformed

    private void txtClienteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtClienteMouseClicked

    }//GEN-LAST:event_txtClienteMouseClicked

    private void txtClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtClienteActionPerformed
        //PesquisarProduto();
    }//GEN-LAST:event_txtClienteActionPerformed

    private void txtClienteFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtClienteFocusGained
        // crtl.somenteNumero(txtCodigoBarras, 100);
    }//GEN-LAST:event_txtClienteFocusGained

    private void txtClienteKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClienteKeyPressed

    }//GEN-LAST:event_txtClienteKeyPressed

    private void txtClienteKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClienteKeyReleased

    }//GEN-LAST:event_txtClienteKeyReleased

    private void txtClienteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtClienteKeyTyped

    }//GEN-LAST:event_txtClienteKeyTyped
    private void PesquisarProduto(ProdutoTO to) {
//        if (txtCodigoBarras.getText().equals("")) {
//            JOptionPane.showMessageDialog(null, "Clique no botão ao lado para selecionar um produto!");
//            txtCodigoBarras.setText("");
//        } else 
        if (txtQtde.getText().equals("")) {
            JOptionPane.showMessageDialog(null, "Digite a quantidade!");
            txtCodigoBarras.setText("");
        } else {

            ProdutoTO prodto = prodcrtl.consultarID(to.getCodBarra());

            //String sv = String.valueOf(prodto.getValorVenda());
            // String vsf = sv.replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
            BigDecimal valor = new BigDecimal(prodto.getValorVenda());
            precoUnit = valor;

            NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
            String valorFormatado = nf.format(valor);
            txtPrecoUnit.setText(valorFormatado);

            produtoTo.setQuantidadetotal(Integer.parseInt(txtQtde.getText()));

            valorTotal = precoUnit.multiply(BigDecimal.valueOf(produtoTo.getQuantidadetotal()));

            produtoTo.setValortotal(valorTotal);
            nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
            valorFormatado = nf.format(valorTotal);
            txtTotal.setText(valorFormatado);

            try {
                preencherTabela3(to);
            } catch (Exception ex) {
                Logger.getLogger(VendasEfetuadass.class.getName()).log(Level.SEVERE, null, ex);
            }
            CalcularTotal();

        }
    }

    public void preencherTabela3(ProdutoTO to) throws Exception {

        ProdutoTO prodTo = new ProdutoTO();
        ProdutoCRTL prodCrtl = new ProdutoCRTL();
        ProdutoDAO dao = new ProdutoDAO();
        ArrayList<ProdutoTO> dados = new ArrayList();

        ArrayList dados1 = new ArrayList();

        dados = dao.ConsultarProdVenda(to.getCodBarra(), produtoTo.getQuantidadetotal(), produtoTo.getValortotal());
        int e = 0;
        e = dados.size();

        dadosback.addAll(dados);
        int i = 0;

//        while (i < dados.size()) {
//            dados1.add(new Object[]{dados.get(i).getCodBarra(), dados.get(i).getDescrProd(), dados.get(i).getNomeMarca(), dados.get(i).getCategoria(), dados.get(i).getValorVenda(), quantidadeTotal, valorTotal});
//            i++;
//        }
//        prodTo = prodCrtl.consultarID(Integer.parseInt(txtCodigoBarras.getText()));
//        JOptionPane.showMessageDialog(null, prodTo.getDescrProd());
//        while (i < dados.size()) {
//            dados1.add(new Object[]{dados.get(i).getCodBarra(), dados.get(i).getDescrProd(), dados.get(i).getNomeMarca(), dados.get(i).getCategoria(), dados.get(i).getValorVenda(), quantidadeTotal, valorTotal});
//            i++;
//        }
        while (i < dadosback.size()) {
            String valVenda = "";
            String valTotal = "";
            String PrecoUnit = "";
            NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
            valVenda = nf.format(BigDecimal.valueOf(dadosback.get(i).getValorVenda()));
            valTotal = nf.format(dadosback.get(i).getValortotal());
            dados1.add(new Object[]{dadosback.get(i).getCodBarra(), dadosback.get(i).getDescrProd(), dadosback.get(i).getNomeMarca(), dadosback.get(i).getCategoria(), valVenda, dadosback.get(i).getQuantidadetotal(), valTotal});
            i++;
        }
        String[] Colunas = new String[]{"Codigo de barras", "Nome", "Marca", "Categoria", "Preço Unitario", "Quantidade Total", "Valor Total"};

        TableMODEL modelo = new TableMODEL(dados1, Colunas);
        jTableVenda.setModel(modelo);
        jTableVenda.getColumnModel().getColumn(0).setPreferredWidth(100);
        jTableVenda.getTableHeader().setReorderingAllowed(false);
        jTableVenda.setAutoResizeMode(jTableVenda.AUTO_RESIZE_OFF);
        jTableVenda.getColumnModel().getColumn(1).setPreferredWidth(260);
        jTableVenda.getColumnModel().getColumn(2).setPreferredWidth(200);
        jTableVenda.getColumnModel().getColumn(3).setPreferredWidth(200);
        jTableVenda.getColumnModel().getColumn(4).setPreferredWidth(200);
        jTableVenda.getColumnModel().getColumn(5).setPreferredWidth(130);
        jTableVenda.getColumnModel().getColumn(6).setPreferredWidth(200);
        jTableVenda.getColumnModel().getColumn(0).setPreferredWidth(200);
        jTableVenda.validate();
        repaint();

    }

    public void GanharFoco(final JTextField txt) {
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                txt.requestFocusInWindow();
            }
        });
    }

    public void GanharFoco(final JFormattedTextField txt) {
        javax.swing.SwingUtilities.invokeLater(new Runnable() {
            public void run() {
                txt.requestFocusInWindow();
            }
        });
    }
//    

    public void RemoverProduto() {
        prod = new ArrayList();
        quant = new ArrayList();
        int linha = jTableVenda.getSelectedRow();
        if (dadosback.isEmpty() != true) {
            if (linha == -1) {
                JOptionPane.showMessageDialog(null, "Selecione a linha do produto a ser removido !");
            } else {

                TableMODEL modelo = (TableMODEL) jTableVenda.getModel();
                modelo.setremove(linha);
                int i = 0;
                ArrayList<ProdutoTO> dadosnew = new ArrayList();
                ProdutoTO prodTo = new ProdutoTO();
                while (i < jTableVenda.getModel().getRowCount()) {
                    prodTo.setCodBarra(Integer.parseInt(jTableVenda.getModel().getValueAt(i, 0).toString()));
                    prodTo.setDescrProd(jTableVenda.getModel().getValueAt(i, 1).toString());
                    prodTo.setNomeMarca(jTableVenda.getModel().getValueAt(i, 2).toString());
                    prodTo.setCategoria(jTableVenda.getModel().getValueAt(i, 3).toString());
                    String sv = (jTableVenda.getModel().getValueAt(i, 4).toString()).replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
                    BigDecimal valVenda = new BigDecimal(sv);
                    prodTo.setValorVenda(valVenda.doubleValue());
                    prodTo.setQuantidadetotal(Integer.parseInt(jTableVenda.getModel().getValueAt(i, 5).toString()));
                    sv = (jTableVenda.getModel().getValueAt(i, 6).toString()).replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
                    BigDecimal valTotal = new BigDecimal(sv);
                    prodTo.setValortotal(valTotal);
                    dadosnew.add(prodTo);
                    i++;
                }
//            JOptionPane.showMessageDialog(null, dadosnew.get(0).getDescrProd());
//            JOptionPane.showMessageDialog(null, dadosnew.get(1).getDescrProd());

                dadosback = dadosnew;
                jTableVenda.setModel(modelo);
                jTableVenda.validate();
                txtPrecoUnit.setText("");
                txtTotal.setText("");
                txtQtdeDisponivel.setText("");
                incremento = jTableVenda.getRowCount();
                CalcularTotal();

            }
        } else {
            JOptionPane.showMessageDialog(null, "Não existem produtos na tabela para serem removidos!");
        }
    }

    private void CalcularTotal() {
        int i = 0;

        BigDecimal total = new BigDecimal(0.0);
        while (i < jTableVenda.getModel().getRowCount()) {
            // total = total.add(BigDecimal.valueOf(Double.parseDouble(jTableVenda.getModel().getValueAt(i, 6).toString())));
            String sv = (jTableVenda.getModel().getValueAt(i, 6).toString()).replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
            BigDecimal valTotal = new BigDecimal(sv);
            total = total.add(valTotal);
            i++;

        }
        vendaTotal = total;
        NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
        String valorFormatado = nf.format(total);
        txtVendaTotal.setText(valorFormatado);

    }

    public void Desconto() {

        if (dadosback.isEmpty() != true) {

            BigDecimal valortotal;
            valortotal = vendaTotal.subtract(desconto);
            if (valortotal.doubleValue() > 0) {
                vendaTotal = valortotal;
                // JOptionPane.showMessageDialog(null, valortotal);
//        String sv = String.valueOf(valortotal.doubleValue());
//        String vsf = sv.replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
//        BigDecimal val = new BigDecimal(vsf);
                NumberFormat nf = NumberFormat.getCurrencyInstance(new Locale("pt", "BR"));
                String valorFormatado = nf.format(valortotal);

                txtVendaTotal.setText(valorFormatado);
                txtVendaTotal.revalidate();
                txtVendaTotal.repaint();
            } else {
                JOptionPane.showMessageDialog(null, "Não é possivel adicionar um desconto maior que o valor total da venda!");
            }
        } else {
            JOptionPane.showMessageDialog(null, "Não foi possivel adicionar o desconto. Nenhum produto foi inserido!");
        }

    }

    public void alterarTotal(String valor) {
        txtVendaTotal.setText(valor);
    }

    public void Cancelar() throws Exception {
        int linha = jTableVenda.getSelectedRow();
        quant = new ArrayList();
        prod = new ArrayList();

        TableMODEL modelo = (TableMODEL) jTableVenda.getModel();
        modelo.limpaTabela();
        int i = 0;
        ArrayList<ProdutoTO> dadosnew = new ArrayList();
        ProdutoTO prodTo = new ProdutoTO();
        while (i < jTableVenda.getModel().getRowCount()) {
            prodTo.setCodBarra(Integer.parseInt(jTableVenda.getModel().getValueAt(i, 0).toString()));
            prodTo.setDescrProd(jTableVenda.getModel().getValueAt(i, 1).toString());
            prodTo.setNomeMarca(jTableVenda.getModel().getValueAt(i, 2).toString());
            prodTo.setCategoria(jTableVenda.getModel().getValueAt(i, 3).toString());
            String sv = (jTableVenda.getModel().getValueAt(i, 4).toString()).replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
            BigDecimal valVenda = new BigDecimal(sv);
            prodTo.setValorVenda(valVenda.doubleValue());
            prodTo.setQuantidadetotal(Integer.parseInt(jTableVenda.getModel().getValueAt(i, 5).toString()));
            sv = (jTableVenda.getModel().getValueAt(i, 6).toString()).replace("R$", "").replace(" ", "").replace(".", "").replace(",", ".");
            BigDecimal valTotal = new BigDecimal(sv);
            prodTo.setValortotal(valTotal);
            dadosnew.add(prodTo);
            i++;
        }
        dadosback = dadosnew;
        jTableVenda.setModel(modelo);
        jTableVenda.validate();
        jTableVenda.repaint();
        jTableVenda.revalidate();

        txtPrecoUnit.setText("");
        txtQtde.setText("");
        txtTotal.setText("");
        txtCodigoBarras.setText("");
        txtQtdeDisponivel.setText("");
        incremento = 0;
        CalcularTotal();

    }

    public void ReceberDadosServico(ArrayList servico, ArrayList funcionarios, ArrayList clientes, BigDecimal vendaTotalServico,
            String descricaovenServ, VendasEfetuadasServico telaServ, int codUsu, ArrayList precoUnitarioServ) {
        this.servicos = servico;
        this.funcionarios = funcionarios;
        this.clientes = clientes;
        this.vendaTotalServico = vendaTotalServico;
        this.descricaovenServ = descricaovenServ;
        this.telaserv = telaServ;
        this.codUsu = codUsu;
        this.precoUnitarioServ = precoUnitarioServ;
    }

    public void ReceberDadosCliente(ClienteTO to) {
        cliTo = to;
        txtCliente.setText(to.getNome());
    }

    public void RecebendoDadosProduto(ProdutoTO to) {
        txtCodigoBarras.setText(to.getDescrProd());
        PesquisarProduto(to);
//        if (jTableVenda.getRowCount() != incremento) {
//            txtCodigoBarras.setText("");
//            txtPrecoUnit.setText("");
//            txtQtde.setText("");
//            txtQtdeDisponivel.setText("");
//            txtTotal.setText("");
//            incremento++;
//            GanharFoco(txtQtde);
//        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCliente;
    private javax.swing.JButton btnRemover;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    public javax.swing.JTable jTableVenda;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtCodigoBarras;
    private javax.swing.JTextField txtPrecoUnit;
    private javax.swing.JTextField txtQtde;
    private javax.swing.JTextField txtQtdeDisponivel;
    private javax.swing.JTextField txtTotal;
    private javax.swing.JTextField txtVendaTotal;
    // End of variables declaration//GEN-END:variables
}
